{"version":3,"sources":["Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","deleteToDo","todoList","length","map","todo","className","onClick","key","task","App","state","Math","random","id","todos","filter","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OA4BeA,G,MA1BF,YAA0B,IAAxBA,EAAuB,EAAvBA,KAAOC,EAAgB,EAAhBA,WAERC,EAAWF,EAAKG,OAEjBH,EAAKI,KAAI,SAAAC,GAEN,OACI,qBAAKC,UAAU,iBAAf,SACA,qBAAKC,QAAS,WAAON,EAAWI,EAAKG,MAArC,SAA6CH,EAAKI,QADbJ,EAAKG,QAQlD,2DAGJ,OAEI,6BAAKN,MCgBFQ,E,4MA/BbC,MAAQ,CACNN,KAAM,CACJ,CAACI,KAAK,eACND,IAAII,KAAKC,UACT,CAACJ,KAAK,iBAEND,IAAII,KAAKC,Y,EAIbZ,WAAa,SAACa,GACZ,IAAIC,EAAQ,EAAKJ,MAAMN,KAAKW,QAAO,SAAAX,GACjC,OAAOA,EAAKG,MAAQM,KAGtB,EAAKG,SAAS,CACZZ,KAAKU,K,uDAOT,OACE,qBAAKT,UAAU,MAAf,SACC,cAAC,EAAD,CAAMN,KAAMkB,KAAKP,MAAMN,KAAMJ,WAAciB,KAAKjB,mB,GA3BnCkB,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2ef31547.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Todo = ({Todo , deleteToDo}) => {\r\n\r\n        const todoList = Todo.length ? (\r\n\r\n             Todo.map(todo => {\r\n\r\n                return(\r\n                    <div className=\"task-container\" key={todo.key}>\r\n                    <div onClick={() => {deleteToDo(todo.key)}}>{todo.task}</div>  \r\n                        \r\n                    </div>\r\n                )\r\n    })\r\n\r\n        ) : (\r\n            <p>You don't have task to do!</p>\r\n        )\r\n\r\n        return(\r\n            \r\n            <h1>{todoList}</h1> \r\n            \r\n        )\r\n\r\n}\r\n\r\nexport default Todo;","\nimport './App.css';\nimport { Component } from 'react';\nimport Todo from './Todo';\n\nclass App extends Component {\n\n  state = {\n    todo: [\n      {task:'Go to market',\n      key:Math.random()},\n      {task:'Embassy Things'\n    ,\n      key:Math.random()}\n    ]\n  }\n\n  deleteToDo = (id) => {\n    let todos = this.state.todo.filter(todo => {\n      return todo.key !== id\n      \n    })\n    this.setState({\n      todo:todos\n    })\n   \n  }\n\n  render() {\n\n  return (\n    <div className=\"App\">\n     <Todo Todo={this.state.todo} deleteToDo = {this.deleteToDo} />\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}