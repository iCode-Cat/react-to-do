{"version":3,"sources":["Components/todoForm.js","Components/Todo.js","Components/todoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","setTodos","todos","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","List","console","log","map","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAyCeA,EAvCF,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,UAAUC,EAAqC,EAArCA,aAAeC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAqB9C,OACI,iCACF,uBAAOC,MAAOJ,EAAWK,SAnBF,SAACC,GAEtBL,EAAaK,EAAEC,OAAOH,QAiB6BI,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAdgB,SAACJ,GACvBA,EAAEK,iBACFT,EAAS,GAAD,mBACDC,GADC,CACM,CAACS,KAAMZ,EAAWa,WAAU,EAAOC,GAAiB,KAAdC,KAAKC,aAIzDf,EAAa,KAOqBQ,UAAU,cAAcD,KAAK,SAAjE,iBAGA,qBAAKC,UAAU,SAAf,SACE,yBAAQQ,KAAK,QAAQR,UAAU,cAA/B,UACE,wBAAQL,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kCCpBSc,EAXN,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAIX,OAEA,sBAAKV,UAAU,OAAf,cAAuB,oBAAIA,UAAU,YAAd,SAA2BU,EAAKP,OAAvD,IAAkE,wBAAQH,UAAU,kBAAlB,mBAAlE,IAAqH,wBAAQA,UAAU,eAAlB,uBCU1GW,EAdF,SAAC,GAAa,IAAZjB,EAAW,EAAXA,MAIX,OAHAkB,QAAQC,IAAInB,GAIR,qBAAKM,UAAU,iBAAf,SACF,oBAAIA,UAAU,YAAd,SACIN,EAAMoB,KAAI,SAAAJ,GAAI,OAAK,cAAC,EAAD,CAAMA,KAAMA,YCW1BK,MAhBf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNzB,EADM,KACKC,EADL,OAEawB,mBAAS,CAAC,KAFvB,mBAENtB,EAFM,KAECD,EAFD,KAGb,OACE,gCACE,iCACA,kDAEF,cAAC,EAAD,CAAMC,MAAOA,EAAOD,SAAUA,EAAUD,aAAcA,EAAcD,UAAWA,IAC/E,cAAC,EAAD,CAAMG,MAAOA,QCHFuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.32902230.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({inputText,setInputText , setTodos, todos }) => {\r\n    \r\n  \r\n    \r\n    const inputTextHandler = (e) => {\r\n        \r\n        setInputText(e.target.value)\r\n        \r\n    }   \r\n\r\n    const submitTextHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([  \r\n            ...todos, {text: inputText, completed:false, id:Math.random()*9999}\r\n            \r\n        ])\r\n        \r\n        setInputText('')\r\n    }\r\n\r\n\r\n    return(\r\n        <form>\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTextHandler} className=\"todo-button\" type=\"submit\">\r\n        ADD\r\n      </button>\r\n      <div className=\"select\">\r\n        <select name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n    )\r\n\r\n}\r\n\r\nexport default Form;","import React from 'react'; \r\n\r\nconst Todo = ({todo}) => { \r\n\r\n  \r\n    \r\n    return( \r\n    \r\n    <div className=\"todo\"> <li className=\"todo-item\">{todo.text}</li> <button className=\"complete-button\">CHECK</button> <button className=\"trash-button\">TRASH</button> \r\n    \r\n    </div> ) } \r\n    \r\n    \r\n    export default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\n\r\nconst List = ({todos}) => {\r\n    console.log(todos);\r\n\r\n    \r\n    return(\r\n        <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n         {todos.map(todo => (<Todo todo={todo} />))}\r\n      </ul>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default List;","\nimport './App.css';\nimport Form from './Components/todoForm';\nimport List from './Components/todoList';\nimport React, {useState} from 'react';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([''])\n  return (\n    <div>\n      <header>\n      <h1>Ed's Todo List</h1>\n    </header>\n    <Form todos={todos} setTodos={setTodos} setInputText={setInputText} inputText={inputText} />\n    <List todos={todos} />\n    </div>\n\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}